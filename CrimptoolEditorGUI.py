#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.9pre on Fri Aug 21 14:18:56 2020
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class CrimptoolEditorGUI(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: CrimptoolEditorGUI.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((591, 465))
        self.SetTitle("CrimptoolEditorGUI")
        
        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_2, 0, 0, 0)
        
        self.btnEdit = wx.Button(self.panel_1, wx.ID_ANY, "Bearbeiten")
        self.btnEdit.Enable(False)
        sizer_2.Add(self.btnEdit, 0, wx.ALL, 5)
        
        self.btnDelete = wx.Button(self.panel_1, wx.ID_ANY, u"Löschen")
        self.btnDelete.Enable(False)
        sizer_2.Add(self.btnDelete, 0, wx.ALL, 5)
        
        self.pnlTopSpacer = wx.Panel(self.panel_1, wx.ID_ANY)
        sizer_2.Add(self.pnlTopSpacer, 1, wx.ALL, 5)
        
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_3, 1, wx.EXPAND, 0)
        
        self.lbCrimpTools = wx.ListBox(self.panel_1, wx.ID_ANY, choices=[])
        sizer_3.Add(self.lbCrimpTools, 0, wx.ALL | wx.EXPAND, 5)
        
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_3.Add(sizer_4, 0, wx.EXPAND, 0)
        
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(sizer_7, 0, 0, 0)
        
        stID = wx.StaticText(self.panel_1, wx.ID_ANY, "ID Nummer:")
        stID.SetMinSize((90, 16))
        sizer_7.Add(stID, 0, wx.ALL, 5)
        
        self.tcID = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.tcID.SetMinSize((250, 22))
        self.tcID.Enable(False)
        sizer_7.Add(self.tcID, 0, wx.ALL, 5)
        
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(sizer_5, 0, 0, 0)
        
        stProd = wx.StaticText(self.panel_1, wx.ID_ANY, "Hersteller:")
        stProd.SetMinSize((90, 16))
        sizer_5.Add(stProd, 0, wx.ALL, 5)
        
        self.tcProd = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.tcProd.SetMinSize((250, 22))
        self.tcProd.Enable(False)
        sizer_5.Add(self.tcProd, 0, wx.ALL, 5)
        
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(sizer_9, 0, 0, 0)
        
        stType = wx.StaticText(self.panel_1, wx.ID_ANY, "Type:")
        stType.SetMinSize((90, 16))
        sizer_9.Add(stType, 0, wx.ALL, 5)
        
        self.tcType = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.tcType.SetMinSize((250, 22))
        self.tcType.Enable(False)
        sizer_9.Add(self.tcType, 0, wx.ALL, 5)
        
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(sizer_6, 0, 0, 0)
        
        stProdNr = wx.StaticText(self.panel_1, wx.ID_ANY, "Hersteller Nr.:")
        stProdNr.SetMinSize((90, 16))
        sizer_6.Add(stProdNr, 0, wx.ALL, 5)
        
        self.tcProdNr = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.tcProdNr.SetMinSize((250, 22))
        self.tcProdNr.Enable(False)
        sizer_6.Add(self.tcProdNr, 0, wx.ALL, 5)
        
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(sizer_8, 0, 0, 0)
        
        stCrimp = wx.StaticText(self.panel_1, wx.ID_ANY, u"Ausführung:")
        stCrimp.SetMinSize((90, 16))
        sizer_8.Add(stCrimp, 0, wx.ALL, 5)
        
        self.tcCrimp = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.tcCrimp.SetMinSize((250, 22))
        self.tcCrimp.Enable(False)
        sizer_8.Add(self.tcCrimp, 0, wx.ALL, 5)
        
        sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(sizer_10, 1, 0, 0)
        
        sizer_11 = wx.BoxSizer(wx.VERTICAL)
        sizer_10.Add(sizer_11, 1, wx.EXPAND, 0)
        
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11.Add(sizer_13, 0, 0, 0)
        
        self.tcAWGSlot = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.tcAWGSlot.SetMinSize((70, 22))
        sizer_13.Add(self.tcAWGSlot, 0, wx.RIGHT | wx.TOP, 5)
        
        self.tcMetSlot = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.tcMetSlot.SetMinSize((70, 22))
        sizer_13.Add(self.tcMetSlot, 0, wx.RIGHT | wx.TOP, 5)
        
        self.lcSlots = wx.ListCtrl(self.panel_1, wx.ID_ANY, style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_VRULES)
        self.lcSlots.SetMinSize((165, 150))
        self.lcSlots.AppendColumn("AWG", format=wx.LIST_FORMAT_LEFT, width=75)
        self.lcSlots.AppendColumn("Metrisch", format=wx.LIST_FORMAT_LEFT, width=75)
        sizer_11.Add(self.lcSlots, 0, wx.ALL, 5)
        
        sizer_12 = wx.BoxSizer(wx.VERTICAL)
        sizer_10.Add(sizer_12, 1, wx.EXPAND, 0)
        
        self.btnAddSlot = wx.Button(self.panel_1, wx.ID_ANY, u"Einsatz hinzufügen")
        self.btnAddSlot.SetMinSize((150, 21))
        self.btnAddSlot.Enable(False)
        sizer_12.Add(self.btnAddSlot, 0, wx.ALL, 5)
        
        self.btnDeleteSlot = wx.Button(self.panel_1, wx.ID_ANY, u"Einsatz löschen")
        self.btnDeleteSlot.SetMinSize((150, 21))
        self.btnDeleteSlot.Enable(False)
        sizer_12.Add(self.btnDeleteSlot, 0, wx.ALL, 5)
        
        self.pnlSubSpacer = wx.Panel(self.panel_1, wx.ID_ANY)
        sizer_12.Add(self.pnlSubSpacer, 1, wx.EXPAND, 0)
        
        self.panel_1.SetSizer(sizer_1)
        
        self.Layout()

        self.Bind(wx.EVT_BUTTON, self.btnEditClicked, self.btnEdit)
        self.Bind(wx.EVT_BUTTON, self.btnDeleteClicked, self.btnDelete)
        self.Bind(wx.EVT_BUTTON, self.btnAddSlotClicked, self.btnAddSlot)
        self.Bind(wx.EVT_BUTTON, self.btnDeleteSlotClicked, self.btnDeleteSlot)
        # end wxGlade

    def btnEditClicked(self, event):  # wxGlade: CrimptoolEditorGUI.<event_handler>
        print("Event handler 'btnEditClicked' not implemented!")
        event.Skip()

    def btnDeleteClicked(self, event):  # wxGlade: CrimptoolEditorGUI.<event_handler>
        print("Event handler 'btnDeleteClicked' not implemented!")
        event.Skip()

    def btnAddSlotClicked(self, event):  # wxGlade: CrimptoolEditorGUI.<event_handler>
        print("Event handler 'btnAddSlotClicked' not implemented!")
        event.Skip()

    def btnDeleteSlotClicked(self, event):  # wxGlade: CrimptoolEditorGUI.<event_handler>
        print("Event handler 'btnDeleteSlotClicked' not implemented!")
        event.Skip()

# end of class CrimptoolEditorGUI

class Crimptool(wx.App):
    def OnInit(self):
        self.CrimptoolEditorGUI = CrimptoolEditorGUI(None, wx.ID_ANY, "")
        self.SetTopWindow(self.CrimptoolEditorGUI)
        self.CrimptoolEditorGUI.Show()
        return True

# end of class Crimptool

if __name__ == "__main__":
    app = Crimptool(0)
    app.MainLoop()
